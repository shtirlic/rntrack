$Id$
                      FTN Messages tracker 1.25


 +------+----------------------------------------------------------------+
 |0.    | Оглавление.                                                    |
 +------+----------------------------------------------------------------+

  Оглавление............................................................0
  Для чего эта штука может понадобиться.................................1
  Как она работает......................................................2
  Запуск................................................................3
  RNtrack.cfg............................................................4
  Параметры слова Mask:.................................................5
  Параметры слова ScriptMask:.........................................5.1
  Параметры слова Action:...............................................6
  Префиксы "*" и "+" для масок .........................................7
  Примеры использования Mask: и Action:.................................8
  Особенности работы....................................................9
  Поддерживаемые типы баз..............................................10
  Squish.............................................................10.1
  *.PKT..............................................................10.2
  *.MSG..............................................................10.3
  JAM................................................................10.4
  Работа с нодлистами..................................................11
  Адресная маска "#".................................................11.1
  Адресная маска "&".................................................11.2
  Работа со скриптами..................................................12
  Гарантии.............................................................13
  Спасибы..............................................................14
  Как меня найти.......................................................15



 +------+----------------------------------------------------------------+
 |1.    | Для чего эта штука может понадобиться                          |
 +------+----------------------------------------------------------------+

 Это "трекалка" нетмейла. Предназначена для обработки нетмейла на нетмейловых
хабах, хотя может быть полезна и обычному узлу.



 +------+----------------------------------------------------------------+
 |2.    | Как она работает                                               |
 +------+----------------------------------------------------------------+

  Берет письмо, сравнивает его с маской и, если сравнение оказалось успешным,
выполняет над данным письмом соответствующую операцию.



 +------+----------------------------------------------------------------+
 |3.    | Запуск                                                         |
 +------+----------------------------------------------------------------+

  Если запустить RNtrack без параметров, то он попытается найти в текущем 
каталоге файл RNtrack.cfg и обработать его. 

Вы можете установить переменную окружения RNTRACKCONFIG (или использовать 
специальный ключ командной строки) для выбора другого пути.

Возможные ключи командной строки:
  -с - Имя файла конфигурации. Например, "-c "d:\soft\fido\RNtrack.cfg"". 
       Пробел между -c и началом пути обязателен. Кавычки обязательны.
  -u - Указывает, что требуется распаковка аутбаунда.
       Перед тем, как выполнить основные функции, описанные в файле 
       конфигурации, RNtrack распакует весь аутбаунд в каталог, указанный в 
       ключевом слове 'TempMail:'.
  -t - Выполнить все 'ScanDir:', для которых указано однократное выполнение,
       не взирая на то, должны они сейчас выполняться или нет.
  -h - Вывести на экран подсказку.



 +------+----------------------------------------------------------------+
 |4.    | RNtrack.cfg                                                     |
 +------+----------------------------------------------------------------+

 Все ключевые слова регистронезависимые. Двоеточие является составной частью 
ключевого слова. Поэтому нельзя писать "Address :" вместо "Address:". 
Комментарии могут начинаться с символа '\' (до конца строки) или '(' 
(до закрывающей скобки).

 Везде, где в качестве параметров используется строка, можно 
использовать подстановку переменных окружения в виде %VAR%. Например: 
Nodelist: "%NDL%\nodelist.*"

 Если строку %..% не удалось разобрать как переменную окружения, то RNtrack 
будет пытаться разобрать ее как шестнадцатеричное число - код символа. 
Например, %22% будет воспринято как '"'.

 Для того, чтобы использовать символ '%' в строках его надо писать дважды. 
Например:
Action: NewMsg "tpl\badfrom.tpl" "h:\fido\post\netmail\out" "Alex Bagmanov" 
        @ "%%" % "Bad source address" +l


Ниже приведены все ключевые слова, отсортированные по алфавиту.

Action: SomeAction { [Time] }
-------

 Указывает операцию, которая будет выполнена над письмом, совпавшим с маской.
Подробнее об этой операции написано в главе 6. Может быть указано время, в
которое будет срабатывать данная команда. Формат параметра Time аналогичен
параметру Time в команде 'ScanDir:' и подробно описан в описании этой команды.

Address:  2:5030/9999
--------
 Адрес Вашей системы. Должен быть 3D (ну, или 4D, хотя я слабо себе представляю
поинта, который поставит себе RNtrack).

AddToNullPkt
------------
 Разрешает допаковывать в файлы ?UT нулевой длины. По умолчанию на такие ?UT
RNtrack ругается.

AgeFromVia
------------
 Эта функциональность не реализована.
 По умолчанию возраст письма, используемый при работе с флагом '-g', 
расчитывается следующим образом: от текущего времени отнимается время написания
письма и получается возраст письма в днях. Если дату написания письма не 
удается получить, или оно явно "странное" (ну, например, если верить дате, то
письмо написано через 10 лет), то считается что письмо написано только что.
При указании 'AgeFromVia' алгоритм получения даты письма меняется полностью.
Он начинает выглядеть следующим образом:
   1. Смотрим последний кладж VIA в письме. Если он принадлежитт нам, то 
      берем дату оттуда.
   2. Если кладж VIA не наш, то считаем, что возраст письма равен 0 дней.
Так-же при использовании 'AgeFromVia' меняется алгоритм прописывания нашего
VIA в кладжи.


Aka: 7:1130/79 7:*/*.*
----
 Ваши ака. Первым параметром этого слова идет ваше AKA, вторым - маска. Маска
указывает, при работе с какими адресами будет использован этот ака. Более 
подробно работа с AKA изложена в описании модификатора адреса '@' и команде
'Action: Route' (или 'Action: RouteFilebox').

APktDir: "Dir"
--------
 Изменяет способ роутинга писем с приаттаченными файлами. По умолчанию данные
письма роутятся как обычные (т.е. добавляются в общий ?UT, а приаттаченные 
файлы в соответствующий ?LO). Если указан APktDir, то письма с приаттаченными
файлами будут класться в отдельные PKT (одно письмо в одном PKT) в указанном 
каталоге и прописываться в ?LO файл после приаттаченных файлов. За счет этого
гарантируется, что сначала будут переданы файлы, а уже потом - письмо, к 
которому эти файлы приаттачены.
 Каталог, указанный в 'APktDir:', не должен совпадать с каталогом, указанным в
'Outbound:'.

BadMessages: <Mode>
------------
 Указывает, что делать RNtrack-у, если он встретил "плохое" (нулевой длины,
с нарушенной структурой, залоченное другим процессом и т.д.) письмо.
   <Mode> : Skip         - пропустить "плохое" письмо.
          : Delete       - удалить "плохое" письмо.
          : Move "Dir"   - переместить "плохое" письмо в 
                           указанную базу.
          : Exit         - Завершить работу RNtrack-а
По умолчанию отрабатывает конструкция Exit.

 Учтите, что операции "Delete" и "Move" могут повести себя не предсказуемо,
если возникла _действительно_ сложная ситуация. Поэтому я рекомендую ими
пользоваться только в том случае, если вы _абсолютно_ уверены в том, что
Вы делаете. 

 Дополнительные ограничения: 
  1. В качестве базы можно указывать базу только в формате *.MSG.
  2. Для всех баз, кроме *.MSG операции Delete и Move работают как Skip. 
     Это связано с тем, что неправильно читающиеся письма из этих баз
     являются первым признаком того, что данная база разрушена. И попытки 
     удалить "плохие" письма могут привести к еще более серьезным разрушениям.

BadPackets: <Mode>
------------
 Указывает, что делать RNtrack-у, если он встретил "плохой" (нулевой длины,
с нарушенной структурой, залоченный другим процессом и т.д.) пакет.
   <Mode> : Skip         - пропустить "плохой" пакет.
          : Delete       - удалить "плохой" пакет.
          : Move "Dir"   - переместить "плохой" пакет в 
                           указанную директорию.
          : Exit         - Завершить работу RNtrack-а
По умолчанию отрабатывает конструкция Skip.

BodyMask: * * *
---------
 Маска, с которой сравнивается тело каждого письма из каталога, указанного 
'ScanDir:'. Порядок параметров такой: 
BodyMask: "StringInBody" <Lines> <Bytes>
    StringInBody - Строка, которая будет искаться в теле письма. Подробнее о
                   формате этой строки можно прочитать в главе 5, в пункте,
                   описывающем маски FromName и ToName.
                   Будьте внимательны, маска "Hi" (например) будет означать
                   именно то, что Вы написали. А именно - письмо должно 
                   состоять из одной строки "Hi" (причем даже без перевода
                   строки), для того, чтобы совпасть с этой маской. Поэтому
                   правильной маской в этом случае будет "*Hi*".
    [!]Lines     - Сравнивается количество строк в теле письма с заданным. 
                   Без знака '!' сравнение идет на "больше или равно". 
                   Со знаком '!' сравнение идет на "меньше"
    [!]Bytes     - Сравнивается количество байт  в теле письма с заданным. 
                   Без знака '!' сравнение идет на "больше или равно". 
                   Со знаком '!' сравнение идет на "меньше"

CheckPoints: <Mode>
------------
 Установка режима проверки наличия поинтов в поинтлисте.
   <Mode> : Never         - Не проверять.
          : Hard          - Проверять "жестко".
          : Soft          - Проверять "мягко".
 Подробнее о действии данного конфигурационного слова читайте в главах 11.1
и 11.2
 Если данное конфигурационное слово пропущено, то считается 
'Checkpoints: Never'.

CreateMissingBase
-----------------
 Если указанная база отсутствует, то разрешает создание новой. По умолчанию 
создание новых баз запрещено.

Domain: "fidonet" 2:*/*.*
-------

Определяет домен для адреса(ов). Используется в The Brake!-файлбоксах. По умолчанию: "fidonet"

FileBox: "h:\fbox\alex" 2:5030/9999
--------

Определяет персональный файлбокс для указанного адреса.


FileBoxDir: "h:\out\fboxes"
-----------

 Указывает каталог, в котором будут создаваться файлбоксы.

Формат файлбокса:

z.n.f.p

z - зона
n - сеть
f - узел
p - пойнт

Пример:

2.5030.1157.0

это файлбокс 2:5030/1157

FileBoxType: <Type>
------------
 Тип файлбоксов
 
   <Type> : Long    - z.n.f.p (по умолчанию)
          : Tmlong  - z.n.f.p; z.n.f.p.h если hold (T-Mail long box)
          : Tmshort - znf.p; znf.ph если hold (T-mail short box, 32-ичное представление)
	  : Brake   - domain.z.n.f.p.favour (The Brake!, flavour = hold, normal, 
	              direct, crash, immediate)

z - зона
n - сеть
f - узел
p - пойнт

FileInbound: "h:\inb\prot" 
------------
 Указывает каталог, в котором будут искаться приаттаченные файлы, если в аттаче
не указан полный путь. Может быть указана как глобально для всего конфига, так
и локально для одного 'ScanDir:'. 
Если это слово опущено, то эти файлы будут искаться в текущем каталоге.

ForceINTL
---------
 Если в письме отсутствует кладж INTL, то во-первых, смотри 'UseOwnZone', а во-
вторых, добавить этот кладж при всех перемещениях и изменениях этого письма.

Origin: "My best origin"
-------
 Указывает ориджин, который будет использоваться в макросе @Origin.

IgnoreAttachPath
----------------
 Игнорировать путь по всех аттачах.
 
IgnoreBSY
---------
 Игнорировать .bsy флаги. При указании данного слова RNtrack не проверяет 
и не создает данные флаги. Внимание! Это потенциально опасная команда.
Используйте ее, только если Вы отчетливо понимаете, зачем и почему
используются данные флаги. 

IndexFile: "o:\nodelist\RNtrack.ndl"
----------
 Указывает имя файла, в котором будет храниться скомпилированный нодлист. Если 
это слово опущено, то имя файла будет RNtrack.ndl, и создаваться он будет в 
текущем каталоге.

Include: "SomeFile"
--------
 Подключение дополнительного файла конфигурации. Возможна любая вложенность
файлов.
 RNtrack начинает обpабатывать этот keyword сpазу же, как только встpетит его,
и, обpаботав, пpодолжает паpсинг основного конфига.

KillRoutedMessage: <Mode>
------------------
 Указывает, что делать с письмом после выполнения команды Action: Route 
(или Action: RouteFilebox)
   <Mode> : Always  - После выполнения команды письмо всегда удаляется.
          : Never   - После выполнения команды письмо никогда не удаляется.
          : Flag    - Если на письме стоит флаг KillSend (k), то письмо будет
                      удалено, иначе - нет.
 По умолчанию считается, что 'KillRoutedMessage: Always'. Удаление письма 
выполняется в базе писем, указанной в той команде 'ScanDir:', к которой 
относится Action: Route. В то же время, это письмо остаётся в памяти и возможна
его дальнейшая обработка.

KludgeMask: * * *
-----------
 Маска, с которой сравниваются кладжи каждого письма из базы, указанной в 
'ScanDir:'. Сравнение идет всех кладжей (и тех, что считаются Kludges, и тех,
что считаются Vias). 
Порядок параметров такой: 
KludgeMask: "KludgeName" "KludgeBody" <Times>
    KludgeName   - Строка, с которой будут сравниваться имена кладжей.
                   Подробнее о формате этой строки можно прочитать в 
                   главе 5, в пункте, описывающем маски FromName и ToName.
    KludgeBody   - Строка, с которой будут сравниваться тела кладжей.
    [!]Times     - Количество совпадений с KludgeName и KludgeBody в письме.
                   Без знака '!' сравнение идет на "больше или равно". 
                   Со знаком '!' сравнение идет на "меньше"
 Для того, чтобы понять, как RNtrack разбирает тот или иной кладж, я рекомендую
запустить RNtrack с отладочным логом и посмотреть результат. Я думаю, что если
Вы настолько сильны в FTN технологии, чтобы понять, как работает эта маска
и вообще для чего она предназначена, то Вам не составит труда разобраться в
отладочном логе RNtrack-а.

LogFile: "c:\log\RNtrack.log"
--------
 Имя файла, в который пишется лог. Учтите, что использование логфайла 
начинается сразу, как только в конфигурационном файле встретится эта команда.
Поэтому я рекомендую ставить ее в самое начало файла конфигурации.
 Вы можете не указывать логфайл. 


LogLevel: 1
---------
 Уровень детализации лога. Возможные значения от 0 до 5. 
 Уровень 0:  - Выдаются только сообщения об ошибках и информация по 
               'Action: Display'.
 Уровень 1:  - Дополнительно выдаются некоторые предупреждения.
 Уровень 2:  - Выдаются все сообщения.
 Уровень 5:  - Вывод отладочной информации. Я не рекомендую пользоваться 
               подобным уровнем в обычных ситуациях, так как при этом логфайл 
               начинает расти с ужасающей скоростью, да и скорость работы 
               несколько понижается.

LoopStr: " 2:5030/9999 RNtrack"
--------
 Указывает строчку, по которой будут ловиться лупы. 
Может быть указана как глобально для всего конфига, так и локально для 
одного 'ScanDir:'. Эта строка используется как подстрока для поиска в Via. 
Так как сам RNtrack VIA проставляет только при использовании 'Action: Route' (или 'Action: RouteFilebox'), то 
приходится ловить такие лупы и по чужим Via. А стандарта как такового на этот 
кладж нету. Вот и лепит кто во что горазд. Поэтому для системы с адресом 
2:5030/9999 нельзя использовать строку "2:5030/9999" как маску, ибо эта подстрока 
входит в адрес 2:5030/99999 (например). Да и мои собственные поинты... В общем, 
я использую "2:5030/9999 @", потому что пакую нетмейл самим RNtrack-ом и использую
новый формат VIA строки. Для тех, кто использует для этой цели Unimail, я могу 
порекомендовать использовать строку типа "2:5030/9999," ибо Unimail ставит в Via 
строку типа: UniMail/W32 0.43b 2:5030/9999, 02 Jun 1998 15:39:32 UTC +0400

Mask: * * * * * *
-----
 Маска, с которой сравнивается каждое письмо из каталога, указанного 
'ScanDir:'.
Порядок параметров такой: 
Mask: FromName FromAddr ToName ToAddr Subject Flags
Подробнее о возможных значениях маски рассказано в главе 5.

MaxAge: 2
-------
 Максимальный возраст письма. Используется совместно с флагом 'g' в 'Mask:'.
Может быть указана как глобально для всего конфига, так и локально для 
одного 'ScanDir:'.

Подробнее об использовании этого параметра рассказано в главе 5 в описании 
флагов.

Алгоритмы расчета возраста письма подробно изложены в описании слова 
'AgeFromVia'.

MaxAttachSize: 2048
--------------
 Максимальный размер файлов, приаттаченных к письму. Размер указывается в 
байтах.
Используется совместно с флагом 'A' в 'Mask:'. Может быть указан как глобально 
для всего конфига, так и локально для одного 'ScanDir:'.

Подробнее об использовании этого параметра рассказано в главе 5 в описании 
флагов.

MaxNodelistAge: 14
---------------
 Максимальный возраст нодлиста, при превышении которого отключается проверка
на наличие адреса в нодлисте (будет считаться, что любой адрес присутствует в
нодлисте).
Подробнее об использовании этого параметра рассказано в главе 11.

MaxMsgSize: 2048
-----------
 Максимальный размер входящего письма. Размер указывается в байтах.
Письма в Squish и Jam базах не проверяются.

MaxPktSize: 2048
-----------
 Максимальный размер входящего pkt файла. Размер указывается в байтах.

UseNewVIA
---------
 Использовать новый формат строки VIA. Отличия форматов в следующем:
 Без 'UseNewVIA' : 
 "Via 2:5030/9999 RNtrack 2.06/W32 08 Oct 1999 03:03:59 UTC+0400"
 С использованием 'UseNewVia' :
 "Via 2:5030/9999 @19991007.230359.UTC RNtrack 2.06/W32"

 Какой именно Вы будете использовать формат - на Ваше усмотрение. Хотя второй
вариант вроде как приближается к стандартному (на 8 октября 1999 стандарта
на формат кладжа VIA нет). Если Вы внимательно посмотрите на VIA-строки писем,
которые лежат в Вашей базе со входящим нетмейлом, то будете удивлены 
разнообразием форматов этой строки.

 Если Вы пользовались старой версией RNtrack, в которой нет этой возможности, 
и решили перейти на новый формат строки VIA, то не забудьте проверить, чтобы 
у Вас была правильно прописана строка в команде 'LoopStr:', если, конечно, 
Вы ей пользуетесь.

Nodelist: "o:\nodelist\nodelist.*" [Zone]
---------
 Имя нодлиста. Таких ключевых слов может быть несколько. Если в расширении
имени используется символ '*', то берется файл с наибольшим номером. Если 
Вы хотите использовать "усеченные" версии нодлиста, то Вы должны указать
в данной команде Зону (Zone), которая будет использоваться по умолчанию.
Скомпилированный нодлист (RNtrack автоматически компилирует нодлист при 
необходимости) хранится в текущем каталоге или там, где указывает слово 
'IndexFile'. Подробнее про работу RNtrack-а с нодлистами написано в главе 11.

NodelistPath: "o:\nodelist"
-------------
 После этого слова все последующие команды 'Nodelist:' будут использовать 
указанный каталог как корень, за исключением случая, когда в команде 
'Nodelist:' указан полный путь к файлу (с диском). Например:
NodelistPath: "o:\nodelist"
Nodelist: "nodelist.*"           \ EQU "o:\nodelist\nodelist.*"
Nodelist: "z7\z7-list.*"         \ EQU "o:\nodelist\z7\z7-list.*"
Nodelist: "c:\addlist.*"         \ EQU "c:\addlist.*"

NoLogIgnore
-----------
 Отключает вывод на экран и в лог информации в случае отрабатывания 
'Action: Ignore'. По умолчанию вывод на экран и в лог включен.

Outbound: "h:\tst\outb"
---------
 Указывает каталог, в котором хранится Binkley Style Outbound. Этот ключ 
может быть пропущен, если Вы не пользуетесь 'Action: Route' (или 'Action: RouteFilebox'),
а роутите нетмейл другой программой.

Password: "Pwd" 2:5020/*.*
---------
 Указывает пароль, который будет использоваться при упаковке пакетов. Может
быть несколько таких команд. Команда 'Action: Route' (или 'Action: RouteFilebox')
проверяет адрес получателя пакета, и если он подпадает под маску, то в пакет 
записывается указанный пароль.

ScanDir: "o:\netmail" [Renumber] [Unpack] [Time] [Flag "[!|#]File"] [ScriptBefore "Func1"] [ScriptAfter "Func2"]
ScanDir: @BeforeRoute|@AfterRoute [Flag "[!|#]File"]
--------
 Указывает базу писем, над которой будет производиться действо. Таких баз может
быть несколько. Письма из базы последовательно считываются в память. Дальше 
каждое письмо можно сравнить с маской командой 'Mask:' и при совпадении с маской
можно выполнить над ним действия командами 'Action:'. Все команды, указанные 
ниже данной команды 'ScanDir', относятся к ней, пока не встретится новая команда
'ScanDir' или не закончится текст конфигурационного файла.

Если указано дополнительное слово Renumber (естественно, без квадратных 
скобок), то после того, как над базой будут выполнены все указанные действия, 
все сообщения в базе будут перенумерованы.
Перенумерация писем в базе работает только для *.MSG формата.

 Если указано Unpack - распаковать аутбаунд в указанную базу _перед_ тем, как
будут выполнены любые действия с базой.

 Если указано Flag "File", то сканирование данной базы будет произведено 
только при наличии соответствующего файла. Если перед именем файла идет знак
'!', то сканирование будет произведено только при _отсутствии_ данного файла.
Если перед именем файла идет знак '#', то этот файл будет удален после 
сканирования базы.

Формат Time следующий:
   Daily [StartTime[-EndTime]|[P.PeriodTime] [...]
   Weekly [StartDay[-EndDay] [...]

Нумерация дней недели: 0 - воскресенье, 1 - понедельник....6 - суббота.
 Время должно быть указано в формате ЧЧ:ММ. Модификаторы времени работают 
только в том случае, если указан 'TimeStampFile'.

Как это работает:
 Daily 
    - если параметры опущены, то сканируем данную базу _один_ раз каждый 
      день (после 00:00).
 Daily 17:00 
   - Сканируем базу _один_ раз в день, после 17:00.
 Daily 17:00-18:00 
   - Сканируем базу при _каждом_ запуске в данном промежутке времени.
 Daily 08:00 12:00 14:00 20:00-22:00
   - Сканируем базу _один_ раз после 8 утра, _один_ раз после 12 дня, _один_
     раз после 14 дня и _каждый_ запуск в промежутке с 20:00 по 22:00.
 Daily P.00:15
   - Сканируем базу _один_ раз через каждые 15 минут. Эта запись - сокращенный
     вариант записи Daily 00:00 00:15 00:30 00:45 01:00... Первое событие
     при использовании данной формы записи всегда начинается в 00:00. 
     Последнее событие - всегда в пределах 00:00-23:59. Например, при указании
     P.00:54 первое событие будет в 00:00, второе - в 00:54, последнее - 
     в 23:24.
 Weekly
   - Если параметры опущены, то сканируем данную базу _один_ раз каждую неделю
     (после 00:00 воскресенья).
 Weekly 1
   - Сканируем базу _один_ раз в понедельник.
 Weekly 2-3
   - Сканируем базу при _каждом_ запуске со вторника по среду включительно.
 Weekly 1 3 5 
   - Сканируем базу _один_ раз в понедельник, _один_ раз в среду и _один_ раз
     в пятницу.

Обратите внимание на то, когда база сканируется _один_ раз (если указано только
начало события) и когда при _каждом_ запуске (если указан диапазон).

 Если в качестве базы указано @BeforeRoute или @AfterRoute, то данный 
'ScanDir:' будет срабатывать до или после выполнения команд 'Action: Route'
(или 'Action: RouteFilebox') в  последующих 'ScanDir:'. Использование модификаторов
Renumber, Unpack и Time для 'ScanDir:' данного типа невозможно. Также запрещено использование 
'Action: Route'.

Semaphore: Time "File"
----------
 Указывает семафор активности RNtrack-а. Если файл "File" существует, значит
активна другая копия RNtrack-а. Параметр Time указывает время, в течение
которого RNtrack ждет пропадания этого файла. Время указывается в минутах. Если
в качестве времени указано 0, RNtrack ждет до пропадания файла. Иначе, по 
истечении указанного времени RNtrack все равно начинает работу. 
Пример:
Semaphore: 60 "c:\temp\RNtrack.bsy"

SetViaAlways
------------
 По умолчанию RNtrack добавляет собственную строку VIA только при выполнении
команды "Route". Если использовать данное слово, то VIA будет добавляться и при 
выполнении команд "Copy" (будет добавлено к копии), "Move", "AddNote", 
"Rewrite" и других команд, изменяющих само письмо (команда "Ignore", например, 
письмо не меняет, поэтому и VIA в письмо не добавится). При этом, если Вы 
несколько раз перекинули письмо из базы в базу, то в письмо попадет все равно 
только одна строка VIA, и время в этой строке будет последнего 
переброса/копирования/изменения.

ScriptFile: "File"
-----------

 Путь к файлу со скриптом.

ScriptMask: "smask"
-----------

 Здесь "smask" - имя функции в скрипте, которая будет вызвана при сравнении
письма с данной маской. Совпадение/несовпадение письма с маской зависит от 
возвращаемого значения этой функции.


 SkipHiddenFiles
---------------
 При проверке наличия файлаттачей считать файлы с атрибутом Hidden как 
отсутствующие. По умолчанию - такие файлы видимы.

SoftCheckInNodelists
--------------------
 Установка "мягкой" проверки наличия узла в нодлисте. Более подробно о том,
что делает эта команда можно прочитать в главах 11.1 и 11.2

SysopName: "Vladimir Lenin"
----------
 Ваше имя. Используется в темплейтах как @Sysop. Кавычки - обязательны. И 
вообще, везде, где кавычки стоят, они обязательны.

Tearline: "Your tear line"
---------
 Тирлайн, используемый в макросе @Tearline. Если не указан, будет 
использоваться "--- RNtrack/XXX X.XX[.bX]".

TempMail: "h:\tst\temp"
---------
 Указывает каталог, в который распаковываются пакеты при использовании функции 
Unpack (ключ -u в командной строке). Этот ключ может быть пропущен, если Вы не 
пользуетесь перепаковкой аутбаунда.

TimeStampFile: "c:\ftrstamp.bin"
--------------
 Указывает имя файла, который используется для корректной работы функций,
срабатывающих в зависимости от времени. Если данного файла нет, он создается.
Содержимое файла не изменяется и не используется. RNtrack изменяет только
"время изменения файла" у данного файла.

TrafficLog: "h:\log\RNtrack.trf"
-----------
 Указывает файл, в который будет писаться лог о всех письмах, обработанных
командой 'Action: Route' (или 'Action: RouteFilebox'). Данное ключевое слово
может быть пропущено, тогда этот лог вестись не будет.

TrafficLogTemplate: "File"
-------------------
 Указывает темплейт для лога трафика. Если данное ключевое слово пропущено,
то будет использован внутренний темплейт (он соответствует темплейту,
лежащему в примерах с именем traflog.tpl)

UseASO
------
 Включает альтернативный формат outbound'а -- т.н. AmigaDOS Style Outbound.
Отличие его от традиционного BSO в том, что используется только одна
директория для outbound'а, и файлы в ней имеют формат z.n.f.p.ext Hапример:

2.5020.9999.0.flo
2.5020.999.888.hlo
99.333.1.0.out

UseBrake
--------

 Включает The Brake! аутбоунд.

UseFileBoxes
------------
 Использовать файлбоксы вместо *.?lo для приаттаченных файлов. Вы должны
определить FileBoxDir до этой директивы. Сообщение (которое содержит аттач)
тоже кладется в файлбокс.

UseOwnZone
----------
 Если в письме отсутствует кладж INTL, то считать, что письмо написано в
той же зоне, что и мы. При этом выбирается тот наш адрес, маска которого
первой совпадет с адресом отправителя.

UTC: +3
----
 Конфигурационное слово UTC задает разницу (в часах) между UTC и местным 
временем в компьютере. Для Московского времени эта величина +3 зимой и +4 
летом. Используется в кладжах при выполнении команды 'Action: Route' (или 
'Action: RouteFilebox'). В большинстве случаев RNtrack сам определяет эту
разницу, но если в Вашей системе не настроено правильно время (один из 
признаков этого - компьютер не переводит сам часы на летнее/зимнее время),
или Вы хотите по какой-либо причине использовать другую разницу во времени,
Вы можете воспользоваться этой командой. Если это ключевое слово пропущено,
и системное время не настроено, то в кладжи будет писаться текущее время.


 +------+----------------------------------------------------------------+
 |5.    | Параметры слова Mask:                                          |
 +------+----------------------------------------------------------------+

 Ключевое слово 'Mask:' указывает маску, с которой будет сравниваться письмо.
Сейчас мы разберем это слово по косточкам.

 Итак, синтаксис этого слова таков:

Mask: FromName FromAddr ToName ToAddr Subject Flags

   FromName, ToName    - Соответствующие текстовые поля из письма. Сравнение 
                         регистронезависимое. Можно использовать следующие
                         дополнительные символы:
                         '*' - любое число любых символов;
                         '?' - любой символ;
                         '#' - любая цифра;
                         '$' - любой печатный символ (т.е. все символы "больше"
                               пробела);
                         '[' и ']' - только указанные символы;
                         '[!' и ']' - только _не_ указанные символы.
                         Если первым символом стоит '!', то проверяется на
                         несовпадение.
                         Например:
                         "*Fix*" - проверить на нахождение данной подстроки.
                         Например, "AreaFix", "FixIt" и "Somefixation" подпадут
                         под эту маску.
                         "*@*.[rs]u" - "eddie@ironmaiden.com" и "some@where.su"
                         подпадут под эту маску, а "some@where.net" - нет.
                         "!*.*" - соответственно, "aaa.bbb" и "c.c.c.c" _не_
                         подпадут под эту маску, а "SomeText" - подпадет.
                         Для того, чтобы использовать символы '*', '?', '[',
                         ']', '!' в качестве просто символов, а не части маски,
                         их надо предварить символом '\'.
                         Например:
                         "\*.\*" - под эту маску подпадет только строка "*.*"

   FromAddr, ToAddr    - Соответствующие поля из письма. Могут содержать как
                         маску (например, 2:*/* или просто *), так и символы:
                         '#' - проверить на наличие в нодлисте;
                         'H' - Узел есть в нодлисте и у него стоит флаг 'Hold';
                         'U' - Узел есть в нодлисте и у него стоит флаг 'Hub';
                         'D' - Узел есть в нодлисте и у него стоит флаг 'Down';
                         'P' - Узел есть в нодлисте и у него стоит флаг 'Pvt';
                         '@' - наш(и) адрес(а).
                         После точки еще может стоять символ '&'. Например,
                         "2:5030/9999.&". Эта запись означает "Узел, его поинты, 
                         его подхабник (если это хаб), подхостник (если это 
                         хост) или весь регион (если это действительно регион)".
                         Подробности работы с масками "#" и "&" читайте в главах 
                         11.1 и 11.2

                         Перед адресом может стоять символ '!', что означает
                         'НЕ'. Например, !2:5030/9999 - адрес _не_ должен быть
                         2:5030/9999.

   Subject             - Сабжект письма. Маски, описанные в полях FromName и
                         ToName, работают и для этого поля.

   Flags               - Флаги письма. Возможные значения:
     a                 - Attach
     A                 - Проверить размер аттачей:
                         +A - Больше, чем указано в 'MaxAttachSize:';
                         -A - Меньше или равно, чем указано в 'MaxAttachSize:'.
     b                 - ARQ
     c                 - Crash
     d                 - Direct
     e                 - Empty (пустое тело письма. Кладжи не учитываются.)
     E                 - Echomail (письмо является эхомейлом)
     f                 - File Request
     g                 - Проверить возраст письма:
                         +g - Больше, чем указано в 'MaxAge:';
                         -g - Меньше или равно, чем указано в 'MaxAge:'.
     h                 - Hold
     i                 - Forward/intransit
     j                 - Kill File Send
     k                 - Kill
     l                 - Local
     L                 - Lock
     m                 - iMmediate
     M                 - Проверить размер сообщений:
                         +M - Больше, чем указано в 'MaxMsgSize:';
                         -M - Меньше или равно, чем указано в 'MaxMsgSize:'.     
     n                 - CFM
     o                 - Orphan
     p                 - Private
     q                 - return receipt reQuest
     r                 - Received
     s                 - Send
     S                 - Archive/Sent
     t                 - Truncate file send
     u                 - Update Request
     v                 - Scanned (Только для эхобаз в формате Squish).
     x                 - Attach Exist.
                         +x - на письме стоит флаг 'a' и все перечисленные в 
                              аттаче файлы присутствуют;
                         -x - на письме стоит флаг 'a' и один или несколько
                              приаттаченных файлов отсутствуют.
     y                 - return receipt
     0 - 9             - Loop Count
                         Если перед флагом стоит знак '+', значит для того, 
                         чтобы письмо совпало с маской, этот флаг должен быть 
                         установлен; если стоит знак '-', то флаг должен быть 
                         сброшен. Особая ситуация с Loop. Флаг +0 указывает, 
                         что ловится ситуация, когда письмо еще ни разу не 
                         проходило через нашу станцию. Флаг -0 ловит ситуацию, 
                         когда письмо проходило через нашу станцию хотя бы один
                         раз. Флаг +1...+9 ловит ситуацию, когда письмо 
                         проходило соответствующее число раз _ИЛИ_БОЛЕЕ_. 
                         Флаг -1...-9 - когда письмо проходило _МЕНЕЕ_ 
                         число раз. Т.е. +0 == -1 -0 == +1    

 Примеры некоторых масок:

 Mask: * * * * * *
 Под такую маску подпадает _любое_ письмо.

 Mask: * * "*Lenin*" * * *
 Под такую маску подпадают те письма, которые написаны на имя, в котором есть
слово Lenin

 Mask: * !# * !# * *
 Под такую маску подпадают те письма, отправитель и получатель которых 
отсутствуют в нодлисте.

 Mask: * * * * * +s
 Под такую маску подпадают письма с установленным флагом Send.

 Масок может быть несколько подряд. Например:
  Mask: * 2:5020/0 * * * *
  Mask: * 2:5020/381 * * * *
  Mask: * 2:5020/1381 * * * *
  Под такую маску подпадают письма, написанные с адреса 2:5020/0, 
или 2:5020/381, или 2:5020/1381.

 Модификатор '@' может быть использован в ситуации, когда надо указать в маске
все наши адреса. Например:
  Address: 2:5030/9999
  Aka: 7:1130/79 7:*/*.*
  Aka: 8:888/888 8:*/*.*
  [...]
  Mask * * * !@ * *
  Под такую маску подпадут все письма, которые написаны не на 2:5030/9999, не на
7:1130/79 и не на 8:888/888.


 +------+----------------------------------------------------------------+
 |5.1   | Параметры слова 'ScriptMask:'                                  |
 +------+----------------------------------------------------------------+

Синтаксис:

 ScriptMask: "smask"
  
 Здесь "smask" - имя функции в скрипте, которая будет вызвана при сравнении
письма с данной маской. Совпадение/несовпадение письма с маской зависит от 
возвращаемого значения этой функции.
 
код возврата | результат
------------------------
0            | сообщение не совпадает с маской
1            | сообщение совпадает с маской
 
Если функция возвращает 1, то письмо совпадает с маской. В противном случае
письмо не совпадает с маскок.

 +------+----------------------------------------------------------------+
 |6.    | Параметры слова 'Action:'                                      |
 +------+----------------------------------------------------------------+
 
 Ключевое слово 'Action:' указывает, что мы будем делать с письмом, совпавшим с
маской. Возможные варианты этого слова:

   Action: AddNote "tpl"           - Добавить в начало тела письма указанный
                                     темплейт.
   
   Action: AddKludge "name" "value" - Добавить кладж в письмо.

   Action: Delete                  - Удалить письмо. Письмо удаляется из базы,
                                     указанной в 'ScanDir:', к которой относится
                                     данная команда. В то же время, письмо
                                     остаётся в памяти и возможна его дальнейшая
                                     обработка другими командами 'Action:',
                                     относящимися к той же команде 'ScanDir:'.

   Action: Move "o:\new\dir"       - Переместить письмо в другую базу. После
                                     перемещения возможна обработка этого
                                     письма другими командами 'Action:',
                                     относящимися к той же команде 'ScanDir:'.

   Action: Copy "o:\new\dir"       - Скопировать письмо в другую базу.

   Action: Rewrite * * * * * *     - Перезаписать письмо. Символ '*' означает,
                                     что данное поле надо оставить без 
                                     изменений. Письмо из памяти записывается
                                     в базу писем, указанную в 'ScanDir:'. В 
                                     поле Subject можно использовать макросы,
                                     используемые в темплейтах.

   Action: Ignore                  - Проигнорировать это письмо.

   Action: Display "Text"          - Вывести строку на экран и в лог.
                                     В поле "Text" можно использовать макросы,
                                     используемые в темплейтах.

   Action: Flag "File"             - Создать файл нулевой длины. Если каталог,
                                     в котором должен быть создан флаг
                                     отсутствует, то он создается.

   Action: DelFile "File"          - Удалить указанный файл. Если файл уже 
                                     отсутствует, то сообщение об ошибке не 
                                     выдается.

   Action: NewMsg "tpl" "dir" * * * * * *
                                   - Создать новое письмо, используя темплейт.
                                     В поле Subject можно использовать макросы,
                                     используемые в темплейтах.

   Action: WriteFile "tpl" "File"  - Создать файл, используя темплейт.

   Action: AppendToFile "tpl" "File"  
                                   - Аналогично WriteFile, если файл уже 
                                     существует, то дописывается к концу файла.

   Action: Call "tpl" "File" "Prg" - Создать файл, используя темплейт. Вызвать
                                     программу "Prg". После ее завершения 
                                     удалить созданный файл. Параметры "tpl"
                                     и "File" могут отсутствовать.
                                     В поле "Prg" можно использовать макросы,
                                     используемые в темплейтах.

   Action: Route <Mode> Address    - Отправить это письмо через соответствующий
                                     адрес. Mode может быть Hold, Crash, 
                                     Direct, Normal или Immediate.
                                     В качестве адреса могут быть использованы
                                     следующие символы: 
                                     %   - отправить через самого получателя 
                                           письма;
                                     %.0 - отправить через босса получателя 
                                           письма.
                                     В качестве адреса отправителя пакета 
                                     берется тот Ваш адрес, который подпадает
                                     под соответствующую маску.
				     
   Action: RouteFilebox <Mode> Address - Отправить это письмо через соответствующий
                                     адрес. Mode может быть Hold, Crash, 
                                     Direct, Normal или Immediate.
                                     В качестве адреса могут быть использованы
                                     следующие символы: 
                                     %   - отправить через самого получателя 
                                           письма;
                                     %.0 - отправить через босса получателя 
                                           письма.
                                     В качестве адреса отправителя пакета 
                                     берется тот Ваш адрес, который подпадает
                                     под соответствующую маску. Письмо кладется
				     в виде отдельного пфкета в файлбокс.
				     
   Action: RouteHub <Mode>        -  Отправить это письмо через хаб адреса назначения. 
				     Mode может быть Hold, Crash, Direct, Normal или Immediate.
				     Отправляет на хост получателя если хаб не найден.
 
   Action: Poll <Mode> Address    -  Сгенерировать Poll на указанный адрес.
                                     Аргументы Mode и Address аналогичны этим
                                     аргументам в команде 'Action: Route' 
				     (или 'Action: RouteFilebox' и т.д.). В 
                                     качестве Poll-а создается соответствующий
                                     ?LO файл нулевой длины. Если данный ?LO
                                     файл уже существует, команда не выполняет
                                     никаких действий.

   Action: DeleteAttach           -  Удаляет аттачи. Само письмо не трогается.
                                     Если на письме нет флага FileAttach, то 
                                     данная команда игнорируется.

   Action: ChangePath "Dir"       -  Изменяет путь в сабжекте. Сами файлы 
                                     никуда не перемещаются. Наличие такого 
                                     каталога не проверяется. Если в качестве 
                                     каталога указать "", то путь просто будет 
                                     удален. Если сумма длин всех новых имен
                                     превышает 71 символ (максимальная длина 
                                     сабжекта), то выдается предупреждение, и 
                                     письмо остается без изменений.
                                     Если на письме нет флага FileAttach, то 
                                     данная команда игнорируется.

   Action: MoveAttach "Dir"       -  Перемещает приаттаченный(е) файл(ы) в 
                                     указанный каталог. В сабжекте письма
                                     записывается новый путь.
                                     Если на письме нет флага FileAttach, то 
                                     данная команда игнорируется.
				     
   Action: MoveAttachFilebox <Mode> Address       -  Перемещает приаттаченный(е) файл(ы) в 
                                     файлбокс для указанного адреса. Аргументы Mode и 
				     Address аналогичны этим аргументам в команде 'Action: Route' 
				     (или 'Action: RouteFilebox' и т.д.). В сабжекте письма
                                     записывается новый путь. Если на письме нет флага 
                                     FileAttach, то данная команда игнорируется.

   Action: CopyAttach "Dir"       -  Копирует приаттаченный(е) файл(ы) в 
                                     указанный каталог. Сабжект письма не
                                     изменяется. Если на письме нет флага 
                                     FileAttach, то данная команда игнорируется.

   Action: CopyAttachFilebox <Mode> Address       -  Копирует приаттаченный(е) файл(ы) в 
                                     файлбокс для указанного адреса. Аргументы Mode и 
				     Address аналогичны этим аргументам в команде 'Action: Route' 
				     (или 'Action: RouteFilebox' и т.д.). Сабжект письма не
                                     изменяется. Если на письме нет флага 
                                     FileAttach, то данная команда игнорируется.

   Action: Script "Func"	  -  Вызывает функцию "Func" из файла,
				     определенного в переменной ScriptFile.

   Action: Split <Lines>          -  Разрезает указанное письмо на несколько,
                                     с количеством строк в теле письма не 
                                     большим Lines. Само письмо после этой
                                     операции уничтожается. В начало каждого
                                     письма добавляется кладж 
                                     "^aSPLITTED: By RNtrack. Part N of N.",
                                     где N - номер текущей части и сколько всего
                                     частей получилось.
				     
   Action: ToLowerPath		  -  Конвертирует в приаттаченом(ых) файле(ах)
				     путь и имя файла в нижний регистр.
				     
   Action: ToUpperPath		  -  Конвертирует в приаттаченом(ых) файле(ах)
				     путь и имя файла в верхний регистр.
				     
   Action: Recode "Recode.tbl"    -  Перекодирует письмо в соответствии с данной
                                     таблицей перекодировки. Формат файла 
                                     перекодировки совместим с hpt. Примеры
                                     данных файлов смотрите в каталоге samples.

Примеры:

   Action: Copy "o:\new\dir"                                     
   Action: Delete
   Выполняет ту же операцию, что 'Action: Move "o:\new\dir"'

   Action: Rewrite * * * * * -cdm
   Сбрасывает у письма атрибуты Crash, Direct и Immediate.

   Action: Route Direct 2:5020/1
   Отправляет письмо через узел 2:5020/1 с флавором Direct.


 А теперь поподробнее рассмотрим 'Action: NewMsg'

 "tpl" в этом слове указывает на темплейт, который будет использован при 
создании нового письма. "Dir" - это каталог, в котором будет это письмо создано.
Остальные поля почти такие же, как в слове 'Mask:' за исключением того, что 
здесь нельзя использовать символы '&', '!' и '#', но есть три других символа - 
это '$', '%' и '@'. Символ '%' указывает, что в полях From или To надо 
использовать адрес или имя получателя, указанные в оригинальном письме. 
Символ '$' указывает, что надо использовать адрес или имя отправителя. Символ 
'@' в адресе указывает, что надо использовать наш адрес (или АКА).

Например:
   
   Action: NewMsg "tpl\badfrom.tpl" "o:\netmail\bout" 
                  "Vladimir Lenin" @ "%%" % "Bad source address" +l
(В конфигурационном файле это должно быть написано в одну строку, сейчас
эта команда разбита на две строки просто для удобства чтения).
 
 Эта команда создает новое письмо в каталоге "o:\netmail\bout", используя 
темплейт, находящийся в "tpl\badfrom.tpl", написанное от имени "Vladimir Lenin"
с адреса 2:5030/9999 на имя и адрес получателя оригинального письма с сабжектом
"Bad source address" и установленым флагом Local.

 В темплейтах можно использовать следующие макросы:

     @ToName            - Имя получателя оригинального письма.
     @ToAddr            - Адрес получателя оригинального письма.
     @InetToAddr        - Адрес получателя оригинального письма (в стиле internet).
     @ToZone            - Зона получателя письма.
     @ToNet             - Сеть получателя письма.
     @ToNode            - Узел получателя письма.
     @ToPoint           - Поинт получателя письма.
     @FromName          - Имя отправителя оригинального письма.
     @FromAddr          - Адрес отправителя оригинального письма.
     @InetFromAddr      - Адрес отправителя оригинального письма (в стиле internet).
     @FromZone          - Зона отправителя оригинального письма.
     @FromNet           - Сеть отправителя оригинального письма.
     @FromNode          - Узел отправителя оригинального письма.
     @FromPoint         - Поинт отправителя оригинального письма.
     @Subject           - Тема оригинального письма.
     @MsgDate           - Дата написания оригинального письма.
     @MsgAge            - Возраст письма.
     @MsgHeader         - Заголовок оригинального письма.
     @MsgKludges        - Кладжи оригинального письма.
     @MsgBody           - Тело оригинального письма.
     @MsgVias           - Via и прочие конечные техстроки оригинального письма.
     @MsgAttr           - Атрибуты письма.
     @MsgLoops          - Loop Counter.
     @MsgAreaName       - Если письмо эхомейл, то название эхообласти, из 
                          которой это письмо.
     @MsgAttachSize     - Размер всех приаттаченных файлов.
     @MsgSize           - Размер тела письма в байтах (без учета кладжей).
     @MsgID             - MSGID письма.
     @MsgLines          - Количество строк тела письма (без учета кладжей).
     @MsgTearline       - Тирлайн письма. Добавляется инвалидированным.
     @MsgOrigin         - Ориджин письма. Добавляется инвалидированным.
     @MsgNTearline      - Тирлайн письма. Добавляется _не_ инвалидированным.
                          Если в письме нет тирлайна, создается пустой.
     @MsgNOrigin        - Ориджин письма. Добавляется _не_ инвалидированным.
                          Если в письме нет ориджина, создается пустой.
     @MsgRoutedVia      - Если данный макрос используется в темплейте,
                          вызываемом внутри 'ScanDir: @AfterRoute|@BeforeRoute',
                          то вместо него подставится адрес, на который
                          роутится данное письмо.
     @MsgReply          - Содержимое кладжа 'Reply' письма.
     @Sysop             - Ваше имя, указанное в конфигурации.
     @MyAddr            - Ваш адрес, указанный в конфигурации.
     @MaxAge            - Значение 'MaxAge:'.
     @MaxAttachSize     - Значение 'MaxAttachSize:'.
     @Date              - Текущая дата.
     @NodeLists         - Список используемых нодлистов.
     @Origin            - Ориджин, указанный в конфигурации. Добавляется _не_
                          инвалидированным.
     @Tearline          - Тирлайн, указанный в конфигурации. Добавляется _не_
                          инвалидированным. Если в конфигурации не указан,
                          то добавляется "--- RNtrack" и версия.
     @Version           - Версия RNtrack.
     @Pid		- PID RNtrack (только под UNIX).

                
 +------+----------------------------------------------------------------+
 |7.    | Префиксы "*" и "+" для масок.                                  |
 +------+----------------------------------------------------------------+

 Маски 'Mask:', 'BodyMask:', 'KludgeMask:' и 'ScriptMask:' могут быть с 
префиксом '*' или '+'. Например, '*Mask:' или '+BodyMask:'. Для чего они 
предназначены? 

 Префикс '+' используется для объединения масок. Например, запись:

   Mask: "a" * * * * *
   +Mask: * * "b" * * *
   +Mask: * * * 2:5030/9999.0 * *

эквивалентна маске:

   Mask: "a" * "b" 2:5030/9999.0 * *

Этот пример несколько надуман и врядли применим в реальном конфиге, но он 
хорошо демонстрирует работу данного префикса. А вот пример более жизненный:

   Mask: * * "*@*" 2:5020/400.0 * *
   +BodyMask: * * 4096

С этой маской совпадут письма, имеющие в имени 'To:' знак '@', адрес 'To:' -
2:5020/400 _и_ размер письма больше 4 килобайт.

Префикс '*' используется для указания фтреку, что даже если письмо совпало
с данной маской, все равно требуется сравнение с последующими масками. 
Для объяснения работы данного префикса рассмотрим следующий пример:

   Mask: * * * * * *
   Action: Display "Mask one"
   Mask: * * * * * *
   Action: Display "Mask two"

При таком конфиге мы никогда не увидим на экране строку "Mask two". Ибо первая
маска будет перехватывать все письма. А вот если изменить конфиг так:

   *Mask: * * * * * *
   Action: Display "Mask one"
   Mask: * * * * * *
   Action: Display "Mask two"

мы увидим и первую строку, и вторую.

И последнее, если в конфиге существует запись типа:

   *Mask: ...
   +Mask: ...
   +Mask: ...

она означает, что письмо должно совпасть со всеми тремя масками, но при этом
письмо будет обработано и другими масками.

 Более развернутые примеры работы с данными префиксами Вы увидите в следующей 
главе.

 +------+----------------------------------------------------------------+
 |8.    | Примеры использования 'Mask:' и 'Action:'                      |
 +------+----------------------------------------------------------------+

 Сделать себе копию всех писем, снять с писем флаг Direct и письма, адресованные
на гейт '2:5020/400' и превышающие размер в 4 килобайта, переадресовать на гейт
'2:5020/204':

   *Mask: * * * * * *
   Action: Copy "c:\netmail\archive"
   *Mask: * * * * * +d
   Action: Rewrite * * * * * -d
   Mask: * * "*@*" 2:5020/400.0 * *
   +BodyMask: * * 4096
   Action: Rewrite * * * 2:5020/204.0 * *


 Удалить все письма, которые адресованы не мне и не моим поинтам:

   Mask: * * * 2:5030/9999.0 * *
   Mask: * * * 2:5030/9999.1 * *
   Mask: * * * 2:5030/9999.3 * *
   Mask: * * * 2:5030/9999.5 * *
   Action: Ignore
   Mask: * * * * * *
   Action: Delete

 Роутить письма для 2:5030/9999.* с 00:00 по 11:59 на 2:5020/238, а с 12:00 по
23:59 - директом на 2:5030/9999.0:

   Mask: * * * 2:5030/9999.* * *
   Action: Route Crash 2:5020/238 [Daily 00:00-11:59]
   Action: Route Crash 2:5030/9999  [Daily 12:00-23:59]


 Удалить все письма, у которых и отправитель и получатель отсутствуют в
нодлисте:
   Mask: * !# * !# * *
   Action: Delete

 У всех писем, которые написаны на адрес 2:5030/9999.1, или которые написаны
на адрес 2:5030/9999.0 и в имени To которых присутствует "Lenin", "Eddie" или 
"Moderator" сбросить флаги Crash, Direct, Immediate, переадресовать на
адрес 2:5030/9999 на имя "Vladimir Lenin" и положить в каталог h:\netmail
   Mask: * * * 2:5030/9999.1 * *
   Mask: * * "*Lenin*" 2:5030/9999 * *
   Mask: * * "*Eddie*" 2:5030/9999 * *
   Mask: * * "*Moderator*" 2:5030/9999 * *
   Action: Rewrite * * "Vladimir Lenin" 2:5030/9999 * -cdm
   Action: Move "h:\netmail"

 Отправить все письма для сети 2:5030 через 2:5030/251
   Mask: * * * 2:5030/*.* * *
   Action: Route Crash 2:5030/251

 Снять со всех писем флаг директ и отправить письма с узла 2:5020/1 на узел 
2:5020/0
   *Mask: * * * * * +d
   Action: Rewrite * * * * * -d
   Mask: * 2:5020/1 * * * *
   Action: Route Direct 2:5020/0

 Отправить письма для всех поинтов узла 2:5030/9999 на них директом. Но 
не отправлять почту на сам этот узел. На самом деле это пример рассылки почты 
поинтам на этом узле.
   Mask  * * * 2:5030/9999.0 * *
   Action: Ignore
   Mask: * * * 2:5030/9999.* * *
   Action: Route Direct %

 Отправить все письма для 2:5020/50.*, /78.*, /204.* и /1301.* на 
соответствующие _узлы_. (Так называемый "Босс роутинг").
   Mask * * * 2:5020/50.* * *
   Mask * * * 2:5020/78.* * *
   Mask * * * 2:5020/204.* * *
   Mask * * * 2:5020/1301.* * *
   Action: Route Direct %.0


 Отправить весь подхабник 2:5020/50 на 2:5020/50, подхостник 2:5020/0 на
2:5020/1381, письма на 2:5030/9999.0 не трогать, а весь подхабник 2:5030/9999 и
его поинтов отослать на них директом.
   Mask * * * 2:5020/50.& * *
   Action: Route Direct 2:5020/50
   Mask * * * 2:5020/0.& * *
   Action: Route Direct 2:5020/1381
   Mask * * * 2:5030/9999.0 * *
   Action: Ignore
   Mask * * * 2:5030/9999.& * *
   Action: Route Direct %

 Отправить весь регион 2:50 на 2:5020/204, весь регион 2:46 на 2:46/0, а все
остальное - на 2:5020/278
   Mask * * * 2:50/0.& * *
   Action: Route Direct 2:5020/204
   Mask * * * 2:46/0.& * *
   Action: Route Direct 2:46/0
   Mask * * * * * *
   Action: Route Direct 2:5020/278

 Пример работы с лупами. Ловим весь нетмейл, который проходил через нашу 
станцию один и более раз и откладываем его в луполовку. Раз в сутки все письма 
из луполовки выпускаем наружу. Если-же письмо прошло через нашу станцию уже 
семь раз (а это значит, что за семь дней роутинг так и не выправился), то 
разворачиваем его отправителю.
   ScanDir: "o:\netmail\loops" Daily 01:00
   Mask: * * * * * *
   Action: Move "O:\netmail\out"
   ...
   ScanDir: "o:\netmail"
   Mask: * * * * * +7
   Action: NewMsg "tpl\Loop.tpl" "o:\netmail\out" "Vladimir Lenin" @ "$" $ "Loop detected" +l
   Action: Delete
   Mask: * * * * * +1
   Action: Move "o:\netmail\loops"
   ...
   Mask: * * * * * *
   Action: Move "o:\netmail\out"

  Пример обработки флага +b (ARQ)
 
   ScanDir: @AfterRoute
   Mask: * * * * * +b
   Action: NewMsg "Audit.tpl" "o:\netmail" "RNtrack" 2:5030/9999 $ $ "Audit request receipt" +l
   ScanDir: "o:\netmail"
   Mask: * * * * * *
   Action: Route Crash 2:5030/9999


 +------+----------------------------------------------------------------+
 |9.    | Особенности работы                                             |
 +------+----------------------------------------------------------------+

 При выполнении команд Move, Copy, ReWrite, ChangePath, MoveAttach 
результатирующее письмо может иметь другой размер. Это связяно с тем, что при
выполнении данных команд письмо создается заново, и в него могут быть дописаны
недостающие кладжи, переводы строк и тому подобное.

 Еще одна особенность, при выполнении комады Delete письмо сразу удаляется,
но при этом оно остается в памяти. Поэтому последовательность команд 
Copy Delete и Delete Copy сделают одно и тоже - Move. Но при этом в первом
случае сначала будет создано новое письмо, а потором удалено старое, а во 
втором случае сначала будет удалено старое письмо, а потом создано новое.

 Да, имейте в виду, RNtrack сам не снимет и не поставит ни единого флага на 
письме. Он не удалит ни одного письма или файла без специальной на то просьбы.
Так что, если вы хотите, что-бы на сканированных письмах появился флаг +s 
после отправки, или что-бы письма с атрибутом KillSent удалялись, то вы
должны сами об этом позаботиться.

 +------+----------------------------------------------------------------+
 |10.   | Поддерживаемые типы баз.                                       |
 +------+----------------------------------------------------------------+

 RNtrack на настоящий момент умеет работать со следующими типами баз:
 1. Squish
 2. *.PKT
 3. *.MSG
 4. JAM


 +------+----------------------------------------------------------------+
 |10.1  | Squish                                                         |
 +------+----------------------------------------------------------------+
                       Формат имени: "$BaseName"

 Первым символом в имени должен идти '$'. В качестве имени базы указывается 
только имя файла, без расширения. 

Примеры:
ScanDir: "$p:\mymail"
Action: Move "$p:\outmail"

Ограничения:
 * Не может использоваться в качестве базы для BadMail.
 * Операция Renumber не выполняет никаких действий.



 +------+----------------------------------------------------------------+
 |10.2  | *.PKT                                                          |
 +------+----------------------------------------------------------------+
           Формат имени: "#[#]Directory[\File][!FtnAddressMask]"

 Первым символом в имени должен идти '#'. В качестве имени базы может 
указываться как каталог (тогда будут просматриваться все файлы совпадающие с
маской *.pkt), так и имя конкретного файла. Если в имени базы указан второй 
знак '#', то пароли проверяться не будут, иначе при открытии каждого *.PKT 
проверяется совпадение пароля с указанным в команде Password:. Дополнительно 
можно указать FTN маску (через символ '!'), тогда будет дополнительно 
проверяться совпадение адреса отправителя пакета с указанной маской. Если 
пароль или адрес в пакете не совпадает с указанным, то данный пакет просто 
пропускается. Если в результате операций указанных в ScanDir: пакет оказывается 
пустым, он удаляется. 

Примеры:
ScanDir: "##o:\inbound"
ScanDir: "#o:\inbound!2:5030/9999"
ScanDir: "#o:\inbound\139c004f.pkt!2:5030/9999"

Ограничения:
 * Не может использоваться в качестве базы для BadMail.
 * Операция Renumber не выполняет никаких действий.
 * Эта база поддерживает только операции чтения письма и удаления письма. Т.е.
   _любые_ операции, которые изменяют содержимое письма запрещены.



 +------+----------------------------------------------------------------+
 |10.3  | *.MSG                                                          |
 +------+----------------------------------------------------------------+
                          Формат имени: "Directory"

 Указывается каталог, в котором лежат письма. Имя каталога должно быть без
завершающего "\" за исключением ситуации, когда указывается корневой каталог.

Примеры:
ScanDir: "o:\netmail"
Action: Move "o:\netmail\out"

Ограничения:
 *  Если в базе, которая в данный момент сканируется, появились новые письма, 
    RNtrack их не увидит до следующего запуска. Причем это касается и писем 
    созданных самим RNtrack-ом.


 +------+----------------------------------------------------------------+
 |10.4  | JAM                                                            |
 +------+----------------------------------------------------------------+
                       Формат имени: "@BaseName"

 Первым символом в имени должен идти '@'. В качестве имени базы указывается 
только имя файла, без расширения. 

Примеры:
ScanDir: "@p:\mymail"
Action: Move "@p:\outmail"

Ограничения:
 * Не может использоваться в качестве базы для BadMail.
 * Операция Renumber не выполняет никаких действий.



 +------+----------------------------------------------------------------+
 |11    | Работа с нодлистами                                            |
 +------+----------------------------------------------------------------+

 RNtrack пользуется нодлистами и поинтлистами при выполнении сравнения с 
адресными масками "#" и "&". Сравнение происходит немного по разному при 
использовании конфигурационных слов "SoftCheckInNodelists" и "CheckPoints:". 
Как именно влияют эти слова, можно прочитать в главах 11.1 и 11.2

 RNtrack понимает как "полные" версии нодлиста (со всеми зонами и регионами),
так и "усеченные" версии (региональные и сетевые). Единственное требование при 
использовании усеченных версий нодлиста - явно указывать Зону в команде 
"Nodelist:", иначе RNtrack откажется компилировать данный нодлист.

 Поинтлист также считается полноправной версией нодлиста, и с ним RNtrack тоже 
работает. Поинтлист должен быть следующего формата:
 --------------------------------
Boss,2:5030/9999
Point,1,PointOne,Moscow,Sysop,-Unpublished-,9600,XA,MO,ZYX,V34
Point,2,PointTwo,Moscow,Sysop2,-Unpublished-,2400,MO
...
---------------------------------
 Поинтлисты должны подключаться после нодлистов. Т.е. вам сначало надо
перечислить все нодлисты, а только потом, поинтлисты.

 Если использовано конфигурационное слово "MaxNodelistAge:", то проверяется
возраст всех используемых нодлистов (возраст проверяется по времени создания
файла). И если хотя бы один нодлист оказался старше, чем указано в данном 
слове, то отключаются любые проверки наличия узла в нодлисте. Считается, что 
любой узел и любой поинт всегда находится в нодлисте/поинтлисте.

 Если используется два или более "перекрывающихся" нодлиста (например полный
нодлист и нодлист сети), то объединение этих нодлистов идет по следующим 
правилам:
 * Узел считается существующим, если он есть хотя-бы в одном нодлисте.
 * Если в одном нодлисте узел хаб, а вдругом нет, то считается, что он хаб.

 +------+----------------------------------------------------------------+
 |11.1  | Адресная маска "#"                                             |
 +------+----------------------------------------------------------------+

 Адресная маска "#" используется в слове "Mask:" и означает проверку на наличие
(или отсуствие) узла отправителя и/или получателя в нодлисте.

 Просто маска "#" - "жесткая" проверка наличия узла в нодлисте. Узел считается
присуствующим в нодлисте тогда и только тогда, когда он действительно там есть.

 "#" + "SoftCheckInNodelists" - "мягкая" проверка наличия узла в нодлисте. Узел
считается присуствующим в нодлисте тогда, когда он там действительно 
присутствует (странно, правда? :), или тогда, когда в нодлисте нет сети и/или 
зоны данного узла. Т.е. если Вы будете использовать сетевой сегмент нодлиста
и маску "#" + "SoftCheckInNodelists", то наличие узла в Вашей сети будет 
проверяться жестко, а узлы во всех остальных сетях проверяться не будут - 
считаем, что они существуют. 

 "CheckPoints:" вносит разнообразие в определение существования поинтов:

 "CheckPoints: Never" - Не проверять наличие поинтов. Поинт считается 
                        существующим если существует его "босс".
 "CheckPoints: Hard"  - Проверять наличие поинтов по поинтлисту. Если поинт 
                        отсуствует в поинтлисте или отсутвует его "босс", то 
                        считается, что поинт не существует.
 "CheckPoints: Soft"  - Проверять наличие поинтов по поинтлисту. Отличие от
                        предыдущего варианта: если в поинтлисте отсуствует 
                        сегмент "босса" поинта, то считается, что поинт 
                        существует. Наличие "босса" поинта в нодлисте по 
                        прежнему обязательно.

 +------+----------------------------------------------------------------+
 |11.2  | Адресная маска "&"                                             |
 +------+----------------------------------------------------------------+

 Адресная маска "&" используется в слове "Mask:" и означает проверку на 
вхождение адреса отправителя и/или получателя в "подбоссник" (если в качестве
маски используется обычный узел), "подхабник" (если узел - хаб), "подхостник"
(если узел является хостом сети) или в регион (если узел является региональной
записью). Обратите внимание на различие масок "2:5020/0.*", "2:5020/*" и 
"2:5020/0.&". Первая маска означает "Все поинты узла 2:5020/0". Вторая маска -
"Все узлы сети 5020". Третья - "Все узлы, находящиеся в подхостнике". В случае
с регионом 2:50 и масками "2:50/0.*", "2:50/*", "2:50/0.&" расшифровка такая:
первая маска - "все поинты узла 2:50/0", вторая маска - "все независимые узлы
в 50 регионе", третья маска - "все узлы в 50 регионе". Учтите, что под адресную
маску "&" не подпадают узлы отсутствующие в нодлисте. Т.е. если узла
"2:5020/1079" нет в нодлисте, то он не совпадет с маской "2:50/0.&".

 Конфигурационное слово "SoftCheckInNodelist" не оказывает на данную маску 
никакого влияния.

 Конфигурационное слово "CheckPoints:" оказывает следующее влияние:
 "CheckPoints: Never" - Не проверять наличие поинта в поинтлисте. С маской 
                        "2:5030/9999.&" совпадут все поинтовые адреса.
 "CheckPoints: Hard"  - Проверять наличие поинтов по поинтлисту. С маской
                        "2:5030/9999.&" совпадут только те поинтовые адреса,
                       которые описаны в поинтлисте.
 "CheckPoints: Soft"  - Проверять наличие поинтов по поинтлисту. С маской
                        "2:5030/9999.&" совпадут только те поинтовые адреса,
                        которые описаны в поинтлисте или все адреса, если
                        сегмент 2:5030/9999 не описан в поинтлисте.

 +------+----------------------------------------------------------------+
 |12.   | Работа со скриптами                                            |
 +------+----------------------------------------------------------------+

 Для сборки с поддержкой скриптов запустите make с параметром ENABLE_SCRIPTS=1.
RNtrack использует Perl в качестве скриптового языка.

Переменные и функции, определенные в скриптах
---------------------------------------------

Константы:

$ConfigFile	- Путь к конфигурационному файлу
$LogFile	- Путь к логу
$LogLevel	- Уровень детализации лога
$SysopName	- Имя сисопа
$TrafficLog	- Путь к логу таффика
$Version	- Версия RNtrack

%FMSG - текущее сообщение.

Ключи:

$FMSG{"FromName"}	- Имя отправителя оригинального письма.
$FMSG{"FromAddr"}	- Адрес отправителя оригинального письма.
$FMSG{"InetFromAddr"}	- Адрес отправителя оригинального письма (в стиле internet).
$FMSG{"ToName"}		- Имя получателя оригинального письма.
$FMSG{"ToAddr"}		- Адрес получателя оригинального письма.
$FMSG{"InetToAddr"}	- Адрес получателя оригинального письма (в стиле internet).
$FMSG{"Subject"}	- Тема оригинального письма.
$FMSG{"Date"}		- Дата написания оригинального письма.
$FMSG{"Age"}		- Возраст письма.
$FMSG{"Attr"}		- Аттрибуты письма.
$FMSG{"Lines"}		- Количество строк тела письма (без учета кладжей).
$FMSG{"Cost"}		- Cost
$FMSG{"TimesRead"}	- TimesRead
$FMSG{"ReplyTo"}	- ReplyTo
$FMSG{"NextReply"}	- NextReply
$FMSG{"AreaName"}	- Если письмо эхомейл, то название эхообласти, из 
                          которой это письмо.
$FMSG{"Body"}		- Тело оригинального письма.


%FKludges - кладжи текущего сообщения

Значение каждого ключа хэша - ссылка на массив. Для получения значения неповторяющегося 
кладжа (все кроме Via и SEEN-BY) используйте этот код:

$kludgevalue=$FKludges{"KludgeName"}[0];

Внимание! Вы должны использовать все спецсимволы в имени кладжа (0x01, ":" и т.д.).

Функции:

Log("text"); 		- Вывод текста в лог и на экран.
Update();		- Обновление текущего сообщения после внесенных
			  скриптом изменений. Вы можете изменить следующие ключи
			  хэша %FMSG:
			  
			  FromName, FromAddr, ToName, ToAddr, Subject, Body,
			  AreaName, Cost, TimesRead, ReplyTo, NextReply.
			  
			  Lines, InetFromAddr, InetToAddr не требуют изменения, 
			  поскольку их значение автоматически переопределяются
			  при изменении Body, FromAddr и ToAddr.
			  
			  Внимание! Измененные данные становятся 
			  доступными только для следующик директив Action.
			  По этой причине для изменения файла после Action: Script
			  добавляется Action: Rewrite.
			  
			  Пример:
			  
			  --- test.pl ---
			  sub maskfunc
			  {
			   $FMSG{"Subject"}="My new subject!";
			   Update();
			  }
			  --- test.pl ---
			  
			  
			  Mask: * * * * * *
			  Action: Script "maskfunc"
			  \ После этого файл сообщения остался неизменным
			  Action: Rewrite * * * * * *
			  \ Теперь в файле сообщения тема изменена на "My new subject!"
			  
			  
ExistsInNodelist("99:99/999");	- Проверка 99:99/999 на наличие в нодлисте

FindHub("99:99/999");           - Возвращает номер хаба для 99:99/999. Возвращает 0 если хаб не найден.

NewMsg($MsgBase,$FromName,$FromAddr,$ToName,$ToAddr,$Subject,$Flags,$Body) - создать сообщение и положить его в базу

Пример:

Следующая команда

 NewMsg("msgs","Alex","2:5030/1666","User","2:5030/1157.1","msg test","","It is My test");

создаст сообщение (msg) в директории 'msgs' от Alex@2:5030/1666 к User@2:5030/1157.1
с темой 'msg test' и телом 'It is My test'. Установка любых флагов и кладжей сейчас не
поддерживается, так что значения аргументов $Flags и $Kludges будут игнорироваться.

Несколько примеров вы можете найти в файле test.pl.

 +------+----------------------------------------------------------------+
 |13.   | Гарантии                                                       |
 +------+----------------------------------------------------------------+

 Данный продукт FreeWare, распространяется по принципу As Is, и я никаких
гарантий дать не могу. Единственное, я обещаюсь более-менее регулярно исправлять
обнаруженные ошибки и выпускать новые версии.



 +------+----------------------------------------------------------------+
 |14.   | Спасибы.                                                       |
 +------+----------------------------------------------------------------+

Спасибо Fyodor Ustinov за создание FTrack.

 Спасибо людям, которые в  разное время переводили данный документ на 
английский, а именно: Kirill Arushanov и Dennis Sulimov.

 Спасибо моим альфатестерам:
    Alex Bagmanov     2:5014/4
    Boris Gordon      2:5020/701
    Kirill Arushanov  1:2810/13
    Sergey Korowkin   2:5033/27
    Serge Sapozhnikov 2:4635/34
    Matt Bedynek
    Eugene Palenock   2:5020/2065
 
 Спасибо авторам патчей:
    Serguei Revtov    2:5021/19.1
    Andrey Slusar     2:467/126
    Michael Kostylev  2:5030/1530

 Спасибо Scott Dudley за его Squish MSGAPI. Кстати, Squish это торговая 
марка SCI Communications.

This product uses the JAM(mbp) API - Copyright 1993 Joaquim Homrighausen, 
Andrew Milner, Mats Birch, Mats Wallin. ALL RIGHTS RESERVED.



 +------+----------------------------------------------------------------+
 |15.   | Как меня найти.                                                |
 +------+----------------------------------------------------------------+

 Ваши пожелания и замечания присылайте мне через фидо (2:5030/1157) или интернет
(ph0enix@users.sourceforge.net).

 Сайт проекта:

http://sourceforge.net/projects/ftrack-as

-------------------------------------------------------------------------------

With best regards,
                  Alex
